// Zmienne SCSS zamiast zmiennych CSS
$font-primary: 'Outfit', sans-serif;
$font-secondary: 'Lora', serif;
$primary-color-blue: #132684;
$primary-color-blue-hover: #0f1e6b;
$secondary-color-blue: #112277;
$secondary-color-blue-hover: #0d1a5f;
$primary-text-color: #333;
$secondary-text-color: #282828;
$background-color: #F3F3F3;
$background-color-hover: #e8e8e8;
$white: #FFFFFF;
$white-hover: #f5f5f5;
$black: #1B1B1B;
$light-grey: #8D8D8D;
$accent-green: #009A33;
$accent-green-hover: #007a29;
$container-width: 1300px;
$padding-x: 20px;

// Możemy też zdefiniować zmienne CSS dla użycia w JavaScript, jeśli to potrzebne
:root {
  --font-primary: #{$font-primary};
  --font-secondary: #{$font-secondary};
  --primary-color-blue: #{$primary-color-blue};
  --secondary-color-blue: #{$secondary-color-blue};
  --primary-text-color: #{$primary-text-color};
  --secondary-text-color: #{$secondary-text-color};
  --background-color: #{$background-color};
  --white: #{$white};
  --black: #{$black};
  --light-grey: #{$light-grey};
  --accent-green: #{$accent-green};
  --container-width: #{$container-width};
  --padding-x: #{$padding-x};
}

// Font Sizes (zgodnie z Twoją specyfikacją)
$font-sizes: (
  "h1": 64px,
  "h2": 54px,
  "h3": 46px,
  "h4": 32px,
  "h5": 24px,
  "h6": 20px,
  "p": 16px,
  "small": 14px,
  "xs": 12px
);

// Font Weights
$font-weights: (
  "light": 300,
  "regular": 400,
  "medium": 500,
  "semibold": 600,
  "bold": 700,
  "extrabold": 800,
  "black": 900
);

// Line Heights (zgodnie z Twoją specyfikacją)
$line-heights: (
  "tight": 1.2,
  "normal": 1.4,
  "relaxed": 1.5,
  "loose": 1.8
);

// Responsive typography mixin
@mixin responsive-heading($element, $size-key, $weight-key: "medium", $line-height-key: "tight") {
  #{$element} {
    font-size: map-get($font-sizes, $size-key);
    font-weight: map-get($font-weights, $weight-key);
    line-height: map-get($line-heights, $line-height-key);
    font-family: $font-primary;
    
    @media (max-width: 1024px) {
      font-size: calc(map-get($font-sizes, $size-key) * 0.85);
    }
    @media (max-width: 768px) {
      font-size: calc(map-get($font-sizes, $size-key) * 0.8);
    }
    @media (max-width: 480px) {
      font-size: calc(map-get($font-sizes, $size-key) * 0.75);
    }
  }
}

// Używamy zmodyfikowanego mixina z odpowiednimi wagami i line-heightami
@include responsive-heading(h1, "h1", "medium", "tight");
@include responsive-heading(h2, "h2", "medium", "tight");
@include responsive-heading(h3, "h3", "medium", "tight");
@include responsive-heading(h4, "h4", "medium", "tight");
@include responsive-heading(h5, "h5", "medium", "tight");
@include responsive-heading(h6, "h6", "light", "tight");  // h6 ma font-weight: 300
@include responsive-heading(p, "p", "regular", "tight");   // p ma line-height: 1.2 zgodnie z Twoją spec

// Global styles
body {
  font-family: $font-primary;
  color: $primary-text-color;
  background-color: $white;
  margin: 0;
  padding: 0;
  line-height: map-get($line-heights, "relaxed");
}

.container {
  max-width: $container-width;
  margin: 0 auto;
  padding-left: $padding-x;
  padding-right: $padding-x;
}

// Spacing system (8px grid)
$spacing: (
  "xs": 4px,
  "sm": 8px,
  "md": 16px,
  "lg": 24px,
  "xl": 32px,
  "2xl": 48px,
  "3xl": 64px,
  "4xl": 80px,
  "5xl": 120px
);

// Breakpoints
$breakpoints: (
  "mobile": 480px,
  "tablet": 768px,
  "desktop": 1024px,
  "large": 1200px
);

// Border radius
$border-radius: (
  "sm": 4px,
  "md": 8px,
  "lg": 12px,
  "xl": 16px
);

// Shadows
$shadows: (
  "sm": 0 1px 2px rgba(0, 0, 0, 0.05),
  "md": 0 4px 6px rgba(0, 0, 0, 0.07),
  "lg": 0 10px 15px rgba(0, 0, 0, 0.1),
  "xl": 0 20px 25px rgba(0, 0, 0, 0.1)
);

// Transitions
$transitions: (
  "fast": 0.15s ease,
  "normal": 0.3s ease,
  "slow": 0.5s ease
);